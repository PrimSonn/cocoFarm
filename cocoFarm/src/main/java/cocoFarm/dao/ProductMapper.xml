<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="cocoFarm.dao.ProductDao">

	<!-- HashMap -->
	<resultMap id="HashMap" type="java.util.HashMap">
		<result column="sale_idx" property="sale_idx" />
		<result column="main_recpt_idx" property="main_recpt_idx" />
		<result column="score" property="score" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="reg_time" property="reg_time" />
		<result column="last_edited" property="last_edited" />
		<result column="isdel" property="isdel" />
		<result column="name" property="acc_name" />
	</resultMap>

	<resultMap id="ProductResult" type="cocoFarm.dto.Product">
		<result column="acc_idx" property="accIdx" />
		<result column="written_time" property="writtenTime" />
		<result column="last_edited" property="lastEdited" />
		<result column="face_img" property="faceImg" />
		<result column="main_img" property="mainImg" />
	</resultMap>

	<sql id="selectProduct">
		SELECT 
			idx,
			acc_idx,
			title,
			origin,
			hit,
			written_time,
			last_edited,
			content,
			face_img,
			main_img,
			isdel
		FROM sale
	</sql>

	<!-- acc_idx: 글쓴이 인덱스 참조하는 속성 (세션) -->
	<!-- systimestamp: 밀리초까지 계산 -->
	<insert id="insert" parameterType="cocoFarm.dto.Product">
		INSERT INTO SALE( idx, acc_idx, title, origin, hit, written_time, last_edited, content, face_img, main_img, isdel)
		VALUES(
			sale_seq.nextval,
			#{accIdx },
			#{title },
			#{origin },
			0,
			sysdate,
			sysdate,
			#{content },
			#{faceImg },
			#{mainImg },
			0 )
		<selectKey resultType="int" keyProperty="idx" order="AFTER">
			SELECT sale_seq.currval FROM DUAL
		</selectKey>
	</insert>

	<select id="selectAll" resultType="cocoFarm.dto.Product">
		<include refid="selectProduct" />
		ORDER BY idx
	</select>

	<select id="countAll" resultType="int">
		SELECT COUNT(*) FROM sale
	</select>

	<select id="selectPage"
					parameterType="cocoFarm.util.Paging"
					resultMap="ProductResult">
		SELECT * FROM (
			SELECT rownum rnum, B.* FROM (
				<include refid="selectProduct" />
				ORDER BY idx DESC
			) B
			ORDER BY rnum
		) R
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
					AND isdel = 0
	</select>

	<select id="selectProductByIdx" parameterType="int"
					resultMap="ProductResult">
		<include refid="selectProduct" />
		WHERE idx = ${_parameter } AND isdel = 0
	</select>

	<update id="update" parameterType="cocoFarm.dto.Product">
		UPDATE SALE
		SET title = #{title },
				origin = #{origin },
				last_edited = sysdate,
				content = #{content },
		<if test = 'faceImg != null and faceImg != "" '>
				face_img = #{faceImg },
		</if>
		<if test = 'mainImg != null and mainImg != "" '>
				main_img = #{mainImg },
		</if>
				isdel = 0
		WHERE idx = #{idx }
	</update>

	<insert id="insertComment" parameterType="cocoFarm.dto.Comment">
		INSERT INTO SALE_EVALUATION (sale_idx,main_recpt_idx,score,title,content,last_edited,isdel)
		VALUES (#{sale_idx }, #{main_recpt_idx }, #{score }, #{title }, #{content }, sysdate, 0)
	</insert>

	<select id="selectAllComment" parameterType="int"
					resultMap="HashMap">
		SELECT SE.*, A.name FROM SALE_EVALUATION SE 
			LEFT JOIN MAIN_RECEIPT M ON SE.main_recpt_idx = M.idx
			LEFT JOIN ACCOUNT A ON M.buyer_idx = A.idx
		WHERE SE.sale_idx = ${_parameter } AND SE.isdel = 0
		ORDER BY last_edited DESC
	</select>
	 
	<select id="selectProductByReceipt" parameterType="java.util.HashMap" resultMap="ProductResult">
		select S.* from SALE_OPTION_RECEIPT SOR
		    left join SALE S ON S.idx = SOR.sale_idx
		where SOR.main_recpt_idx = #{param1 } and SOR.sale_option_idx = #{param2 }
	</select>

	<!-- ==================================================================================== -->

	<!--hwanmin 2018_05_26 work-->
 	<select id="ProMainList" resultType="cocoFarm.dto.Product">
 	select S.IDX, S.ACC_IDX, S.TITLE, S.ORIGIN, S.HIT, S.WRITTEN_TIME, S.LAST_EDITED, S.FACE_IMG as faceImg, SO.MIN_PRICE from SALE S
 inner join (select SALE_IDX, min(PRICE) MIN_PRICE from SALE_OPTION where ISDEL =0 group by  SALE_IDX) SO
on S.IDX = SO.SALE_IDX where S.ISDEL =0
 	</select>

 	<select id="SerchPro" parameterType="cocoFarm.dto.Product" resultType="cocoFarm.dto.Product">
 		select S.IDX, S.ACC_IDX, S.TITLE, S.ORIGIN, S.HIT, S.WRITTEN_TIME, S.LAST_EDITED, S.FACE_IMG as faceImg, SO.MIN_PRICE from SALE S
 		inner join (select SALE_IDX, min(PRICE) MIN_PRICE from SALE_OPTION where ISDEL =0 group by  SALE_IDX) SO
		on S.IDX = SO.SALE_IDX where S.TITLE LIKE '%' || #{search_name} || '%'  
 	</select>

 	<!--hwanmin 2018_05_31 detailview select  -->
 	<select id="getDetailList" parameterType="cocoFarm.dto.Product" resultType="cocoFarm.dto.Product">
 		SELECT
 			S.idx idx, S.origin origin, S.acc_idx accIdx, S.title title, S.hit hit, S.content content, S.FACE_IMG faceImg, S.MAIN_IMG mainImg 
			,A.name name, A.THUMB_loc THUMB_IMG, A.EMAIL email
			,B.corporation_name corporation_name, B.BUSINESS_LICENSE_CODE BUSINESS_LICENSE_CODE, B.REPRESENTATIVE REPRESENTATIVE
			,B.business_addr business_addr, B.business_category business_category
			,CAT.NAME AS CATEGORY_NAME 
		FROM SALE S 
		INNER JOIN Account A ON S.ACC_IDX = A.IDX 
		INNER JOIN BUSINESS_INFO B ON S.ACC_IDX = B.ACC_IDX
    	LEFT JOIN (
		        SELECT listagg(CONVERT(SC.NAME,'UTF8','AL16UTF16'), ', ')WITHIN GROUP (ORDER BY SC.NAME) AS NAME , SC.SALE_IDX
		            FROM (SELECT DISTINCT C.NAME AS NAME, SO.SALE_IDX SALE_IDX FROM SALE_OPTION SO
		            INNER JOIN SALE_OPT_CATEGORY SOC ON SO.IDX = SOC.SALE_OPT_IDX
		            INNER JOIN CATEGORY C ON SOC.CATEGORY_IDX = C.IDX
		            WHERE SALE_IDX = #{idx} AND C.NAME IS NOT NULL
					) SC GROUP BY SC.SALE_IDX
				) CAT ON CAT.SALE_IDX = S.IDX 
		WHERE S.IDX = #{idx} AND S.ISDEL =0
 	</select>

 	<select id="getOptionList" parameterType="cocoFarm.dto.SaleOption" resultType="cocoFarm.dto.SaleOption">
 		select s.idx idx, s.sale_idx saleidx,s.name optionName,s.description description,s.price price,s.unit unit,
		s.start_amount startAmount,s.LEFT_AMOUNT leftAmount,s.LASTSOLD_TIME lastsoldTime,s.WRITTEN_TIME writtenTime,
		s.LAST_EDITED lastEdited, s.isdel isdel
		from sale_OPTION s where Sale_idx=#{idx} AND isdel=0
		ORDER BY idx
 	</select>

	<select parameterType="String" id="getPayOption" resultType="cocoFarm.dto.SaleOption"> 
	select S.idx idx,S.Sale_idx saleIdx, S.NAME optionName, S.DESCRIPTION DESCRIPTION,
	s.price price from SALE_option S WHERE idx IN ${value} </select>

	<select parameterType="String" id="getSale_Option" resultType="cocoFarm.dto.Product"> 
	select
	s.IDX IDX, S.ACC_IDX ACCIDX, S.TITLE TITLE, S.HIT HIT, S.CONTENT CONTENT, S.FACE_IMG FACEIMG, S.MAIN_IMG MAINIMG
	, A.NAME NAME
	, BI.CORPORATION_NAME CORPORATION_NAME, BI.REPRESENTATIVE REPRESENTATIVE
	from SALE S
	inner join ACCOUNT A on S.ACC_IDX = A.IDX
	inner join BUSINESS_INFO BI on A.IDX = BI.ACC_IDX
	where S.IDX in ${value} 
	</select>

	<select id="ProViewMainList" resultType="cocoFarm.dto.Product">
	SELECT * from (select S.IDX, S.ACC_IDX, S.TITLE, S.ORIGIN, S.HIT, S.WRITTEN_TIME, S.LAST_EDITED, S.FACE_IMG as faceImg, SO.MIN_PRICE from SALE S
	 inner join (select SALE_IDX, min(PRICE) MIN_PRICE from SALE_OPTION where ISDEL =0 group by  SALE_IDX) SO
	on S.IDX = SO.SALE_IDX where S.ISDEL =0  ORDER BY idx desc)where rownum between 1 and 5
	</select>
	
	<select id="procPayNee" parameterType="int" resultType="cocoFarm.dto.ReceiptDto">
		SELECT M.*, SOR.*, A.NAME buyer from MAIN_RECEIPT M
    		left join SALE_OPTION_RECEIPT SOR on M.IDX = SOR.MAIN_RECPT_IDX
   			left join SALE S on SOR.SALE_IDX = S.IDX
   			left join ACCOUNT A on M.BUYER_IDX = A.IDX
		WHERE S.ACC_IDX = #{accIdx }
	</select>
</mapper>