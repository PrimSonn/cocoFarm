<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="TEMP_RECPT_CLEAR" directorySegmentName="seg_0" id="74EA8D13-CED9-7F40-E1CF-4D4DC177EE9D">
<sourceConnName>cocoFarm</sourceConnName>
<sourceObjSchema>COCOFARM</sourceObjSchema>
<sourceObjName>TEMP_RECPT_CLEAR</sourceObjName>
<createdBy>Sonn</createdBy>
<createdTime>2018-06-17 09:48:31 UTC</createdTime>
<ownerDesignName>cocoDataModel</ownerDesignName>
<owner>9B2CBDD9-D4EA-AD8B-3936-1238B79FFDD3</owner>
<source>CREATE OR REPLACE procedure COCOFARM.TEMP_RECPT_CLEAR (DBTIME out timestamp, NEXTCHECK out timestamp)&lt;br/&gt;is&lt;br/&gt;	recpt_idx_arr		holder := holder();&lt;br/&gt;	cnt					number;&lt;br/&gt;	list				nvarchar2(2000);&lt;br/&gt;&lt;br/&gt;	err_code			number;&lt;br/&gt;	err_message			varchar2(255);&lt;br/&gt;begin&lt;br/&gt;	list := &apos;&apos;;&lt;br/&gt;&lt;br/&gt;	select count(1) into cnt from MAIN_RECEIPT where CONTRACT_TIME &lt; SYSTIMESTAMP - numtodsinterval(5,&apos;MINUTE&apos;) and STATE_CODE =0;&lt;br/&gt;	recpt_idx_arr.extend(cnt +50);&lt;br/&gt;	select T.IDX bulk collect into recpt_idx_arr &lt;br/&gt;		from (select IDX, ROWNUM R from MAIN_RECEIPT where CONTRACT_TIME &lt; SYSTIMESTAMP - numtodsinterval(5,&apos;MINUTE&apos;) and STATE_CODE =0) T&lt;br/&gt;	where T.R&lt;=100;&lt;br/&gt;&lt;br/&gt;	delete BID_CONTRACT_RECEIPT where MAIN_RECPT_IDX in (select COLUMN_VALUE from table (recpt_idx_arr));&lt;br/&gt;	delete SALE_OPTION_RECEIPT where MAIN_RECPT_IDX in (select COLUMN_VALUE from table (recpt_idx_arr));&lt;br/&gt;	delete SALE_RECEIPT where MAIN_RECPT_IDX in (select COLUMN_VALUE from table (recpt_idx_arr));&lt;br/&gt;	delete MAIN_RECEIPT where IDX in (select COLUMN_VALUE from table (recpt_idx_arr));&lt;br/&gt;&lt;br/&gt;	if(recpt_idx_arr.last&gt;0) then&lt;br/&gt;		for i in 1..(recpt_idx_arr.last-1) loop&lt;br/&gt;			list := list || recpt_idx_arr(i) || &apos;, &apos;;&lt;br/&gt;		end loop;&lt;br/&gt;		list := list || recpt_idx_arr(recpt_idx_arr.last);&lt;br/&gt;	else&lt;br/&gt;		list := &apos;nothing selected&apos;;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;TEMP_RECPT_CLEAR&apos;, 1, &apos;recpt_idx_arr: &apos;||list);&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select SYSTIMESTAMP, SYSTIMESTAMP + numtodsinterval(3, &apos;MINUTE&apos;) into DBTIME, NEXTCHECK from DUAL;&lt;br/&gt;--	select SYSTIMESTAMP, SYSTIMESTAMP + numtodsinterval(1, &apos;HOUR&apos;) into DBTIME, NEXTCHECK from DUAL;&lt;br/&gt;&lt;br/&gt;exception when OTHERS then&lt;br/&gt;&lt;br/&gt;	err_code := sqlcode;&lt;br/&gt;	err_message := substr(sqlerrm, 1, 255);&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT, err_code, err_message) values (&apos;TEMP_RECPT_CLEAR&apos;, 0, &apos;ERROR&apos;, err_code, err_message);&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select SYSTIMESTAMP, SYSTIMESTAMP + numtodsinterval(3, &apos;MINUTE&apos;) into DBTIME, NEXTCHECK from DUAL;&lt;br/&gt;--	select SYSTIMESTAMP, SYSTIMESTAMP + numtodsinterval(1, &apos;HOUR&apos;) into DBTIME, NEXTCHECK from DUAL;&lt;br/&gt;end;</source>
</StoredProcedureOraclev10g>