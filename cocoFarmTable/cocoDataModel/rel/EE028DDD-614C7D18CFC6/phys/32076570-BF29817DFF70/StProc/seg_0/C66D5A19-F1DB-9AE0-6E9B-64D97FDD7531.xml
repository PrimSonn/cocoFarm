<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="BIDDER" directorySegmentName="seg_0" id="C66D5A19-F1DB-9AE0-6E9B-64D97FDD7531">
<sourceConnName>cocoFarm</sourceConnName>
<sourceObjSchema>COCOFARM</sourceObjSchema>
<sourceObjName>BIDDER</sourceObjName>
<createdBy>Sonn</createdBy>
<createdTime>2018-06-17 09:48:31 UTC</createdTime>
<ownerDesignName>cocoDataModel</ownerDesignName>
<owner>9B2CBDD9-D4EA-AD8B-3936-1238B79FFDD3</owner>
<source>CREATE OR REPLACE procedure COCOFARM.BIDDER (in_auction_idx AUCTION.IDX%type, in_amount AUCTION.HIGHEST_BID%type, in_bidder_idx BID.BIDDER_IDX%type, isDone out number)&lt;br/&gt;is&lt;br/&gt;	a_amount		AUCTION.HIGHEST_BID%type;&lt;br/&gt;	a_timeWindow	AUCTION.REG_TIME%type;&lt;br/&gt;	a_writter		AUCTION.WRITTER_IDX%type;&lt;br/&gt;&lt;br/&gt;	err_code		number;&lt;br/&gt;	err_message		varchar2(255);&lt;br/&gt;&lt;br/&gt;begin&lt;br/&gt;&lt;br/&gt;	select A.HIGHEST_BID , A.REG_TIME+(select TIME_WINDOW from AUCTION_TIME_WINDOW_TYPE where CODE = A.TIME_WINDOW_CODE) ,WRITTER_IDX&lt;br/&gt;		into a_amount, a_timeWindow, a_writter  from AUCTION A where IDX = in_auction_idx;&lt;br/&gt;&lt;br/&gt;	if (in_bidder_idx = a_writter) then&lt;br/&gt;		insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BIDDER&apos;,-3,&apos;Self Bidding (auctionIdx: &apos;||in_auction_idx||&apos;,amount:  &apos;||in_amount||&apos;,bidderIdx: &apos;||in_bidder_idx||&apos;)&apos;);&lt;br/&gt;		select -3 into isDone from DUAL;&lt;br/&gt;	elsif ( SYSTIMESTAMP &gt; a_timeWindow) then&lt;br/&gt;		insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BIDDER&apos;,-2,&apos;Bid after Timeout (auctionIdx: &apos;||in_auction_idx||&apos;,amount: &apos;||in_amount||&apos;,bidderIdx: &apos;||in_bidder_idx||&apos;)&apos;);&lt;br/&gt;		select -2 into isDone from DUAL;&lt;br/&gt;	elsif (in_amount &lt; a_amount*1.1) then&lt;br/&gt;		insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BIDDER&apos;,-1,&apos;usder Bid (auctionIdx: &apos;||in_auction_idx||&apos;,amount: &apos;||in_amount||&apos;,bidderIdx: &apos;||in_bidder_idx||&apos;)&apos;);&lt;br/&gt;		select -1 into isDone from DUAL;&lt;br/&gt;	else&lt;br/&gt;		update AUCTION set HIGHEST_BID = in_amount where IDX = in_auction_idx;&lt;br/&gt;		insert into BID (AUCTION_IDX, AMOUNT, BIDDER_IDX) values (in_auction_idx, in_amount, in_bidder_idx);&lt;br/&gt;		insert into BID_ALIVE_QUE (AUCTION_IDX, BID_AMOUNT, BIDDER_IDX) values (in_auction_idx, in_amount, in_bidder_idx);&lt;br/&gt;		update BID set STATE_CODE = 12, FINISHED_WHEN = SYSTIMESTAMP where AUCTION_IDX = in_auction_idx and AMOUNT != in_amount and BIDDER_IDX = in_bidder_idx;&lt;br/&gt;		update BID set STATE_CODE = 2 where AUCTION_IDX = in_auction_idx and AMOUNT != in_amount and STATE_CODE =1;&lt;br/&gt;		delete BID_ALIVE_QUE where AUCTION_IDX = in_auction_idx and BID_AMOUNT != in_amount and BIDDER_IDX =  in_bidder_idx;&lt;br/&gt;		insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BIDDER&apos;,1,&apos;BID done (auctionIdx: &apos;||in_auction_idx||&apos;,amount: &apos;||in_amount||&apos;,bidderIdx: &apos;||in_bidder_idx||&apos;)&apos;);&lt;br/&gt;		select 1 into isDone from DUAL;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;exception when OTHERS then&lt;br/&gt;&lt;br/&gt;	err_code := sqlcode;&lt;br/&gt;	err_message := substr(sqlerrm, 1, 255);&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT, err_code, err_message) values (&apos;BIDDER&apos;,0,&apos;ERROR! (auctionIdx: &apos;||in_auction_idx||&apos;,amount: &apos;||in_amount||&apos;,bidderIdx: &apos;||in_bidder_idx||&apos;)&apos;, err_code, err_message );&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select 0 into isDone from DUAL;&lt;br/&gt;end;</source>
</StoredProcedureOraclev10g>