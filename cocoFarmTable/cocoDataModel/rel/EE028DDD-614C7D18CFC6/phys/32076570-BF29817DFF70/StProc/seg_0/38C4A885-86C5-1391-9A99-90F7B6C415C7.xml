<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="CANCEL_AUCTION" directorySegmentName="seg_0" id="38C4A885-86C5-1391-9A99-90F7B6C415C7">
<sourceConnName>cocoFarm</sourceConnName>
<sourceObjSchema>COCOFARM</sourceObjSchema>
<sourceObjName>CANCEL_AUCTION</sourceObjName>
<createdBy>Sonn</createdBy>
<createdTime>2018-06-17 09:48:31 UTC</createdTime>
<ownerDesignName>cocoDataModel</ownerDesignName>
<owner>9B2CBDD9-D4EA-AD8B-3936-1238B79FFDD3</owner>
<source>CREATE OR REPLACE procedure COCOFARM.CANCEL_AUCTION (in_auction_idx AUCTION.IDX%type, in_writter_idx AUCTION.WRITTER_IDX%type, isDone out number)&lt;br/&gt;is&lt;br/&gt;	null_checker		number;&lt;br/&gt;	auction_state		AUCTION.STATE_CODE%type;&lt;br/&gt;	auction_title		AUCTION.TITLE%type;&lt;br/&gt;	karma_point			BAD_DEED_TYPE.KARMA%type;&lt;br/&gt;&lt;br/&gt;	err_code			number;&lt;br/&gt;	err_message			varchar2(255);&lt;br/&gt;&lt;br/&gt;	cursor BID_CUR is&lt;br/&gt;		select AUCTION_IDX, AMOUNT, BIDDER_IDX from BID where (AUCTION_IDX, AMOUNT) in (select AUCTION_IDX, BID_AMOUNT from BID_ALIVE_QUE where AUCTION_IDX = in_auction_idx) for update;&lt;br/&gt;begin&lt;br/&gt;&lt;br/&gt;	select count(1) into null_checker from AUCTION where IDX = in_auction_idx;&lt;br/&gt;&lt;br/&gt;	if (null_checker =0) then&lt;br/&gt;		insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;CANCEL_AUCTION&apos;, -1, &apos;No such AUCTION exists. [in_auction_idx: &apos;||in_auction_idx||&apos;, in_writter_idx: &apos;||in_writter_idx||&apos;]&apos;);&lt;br/&gt;		select -1 into isDone from DUAL;&lt;br/&gt;	else&lt;br/&gt;		select count(1) into null_checker from AUCTION where IDX = in_auction_idx and WRITTER_IDX = in_writter_idx;&lt;br/&gt;&lt;br/&gt;		if (null_checker =0) then&lt;br/&gt;			insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;CANCEL_AUCTION&apos;, -2, &apos;cancel request is not from a writter. [in_auction_idx: &apos;||in_auction_idx||&apos;, in_amount: &apos;||in_writter_idx||&apos;]&apos;);&lt;br/&gt;			select -2 into isDone from DUAL;&lt;br/&gt;		else&lt;br/&gt;&lt;br/&gt;			select TITLE, STATE_CODE into auction_title, auction_state from AUCTION where IDX = in_auction_idx;&lt;br/&gt;&lt;br/&gt;			if(auction_state =1) then&lt;br/&gt;				delete AUCTION_DUE_QUE where AUCTION_IDX = in_auction_idx;&lt;br/&gt;				update AUCTION set STATE_CODE = 2, FINISHED_WHEN = SYSTIMESTAMP where IDX = in_auction_idx;&lt;br/&gt;				insert into BAD_DEED_RECORD (CULPRIT_IDX, DEED_CODE) values (in_writter_idx, 6);&lt;br/&gt;				select KARMA into karma_point from BAD_DEED_TYPE where CODE = 6;&lt;br/&gt;				insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, in_writter_idx, &apos;&apos;&apos;&apos;||auction_title||&apos;&apos;&apos; 경매를 취소하셨습니다.&apos;,&apos;진행중 인 경매를 취소하셨기 때문에 벌점 &apos;||karma_point||&apos;점을 받으셨습니다.&apos;,1);&lt;br/&gt;&lt;br/&gt;				for BID_ROW in BID_CUR loop&lt;br/&gt;					update BID set STATE_CODE = 20, FINISHED_WHEN = SYSTIMESTAMP where current of BID_CUR;&lt;br/&gt;					insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, BID_ROW.BIDDER_IDX, &apos;&apos;&apos;&apos;||auction_title||&apos;&apos;&apos; 경매가 취소되었습니다.&apos;, &apos;진행중 이던 경매가 취소되어 해당 경매에 신청한 입찰이 취소되었습니다.&apos;, 1);&lt;br/&gt;				end loop;&lt;br/&gt;&lt;br/&gt;				delete BID_ALIVE_QUE where AUCTION_IDX = in_auction_idx;&lt;br/&gt;&lt;br/&gt;				insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;CANCEL_AUCTION&apos;, 1, &apos;Success. Auction canceled while running. [in_auction_idx: &apos;||in_auction_idx||&apos;, in_amount: &apos;||in_writter_idx||&apos;]&apos;);&lt;br/&gt;				select 1 into isDone from DUAL;&lt;br/&gt;&lt;br/&gt;			elsif(auction_state =6) then&lt;br/&gt;				delete BID_CONTRACT_QUE where AUCTION_IDX = in_auction_idx;&lt;br/&gt;&lt;br/&gt;				for BID_ROW in BID_CUR loop&lt;br/&gt;					update BID set STATE_CODE = 21,FINISHED_WHEN = SYSTIMESTAMP where current of BID_CUR;&lt;br/&gt;					insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, BID_ROW.BIDDER_IDX, &apos;&apos;&apos;&apos;||auction_title||&apos;&apos;&apos; 경매가 취소되었습니다.&apos;, &apos;낙찰을 대기중이던 경매가 취소되어 해당 경매에 신청한 입찰이 취소되었습니다.&apos;, 1);&lt;br/&gt;				end loop;&lt;br/&gt;&lt;br/&gt;				delete BID_ALIVE_QUE where AUCTION_IDX = in_auction_idx;&lt;br/&gt;&lt;br/&gt;				update AUCTION set STATE_CODE = 8, FINISHED_WHEN = SYSTIMESTAMP where IDX = in_auction_idx;&lt;br/&gt;				insert into BAD_DEED_RECORD (CULPRIT_IDX, DEED_CODE) values (in_writter_idx, 7);&lt;br/&gt;				select KARMA into karma_point from BAD_DEED_TYPE where CODE = 7;&lt;br/&gt;				insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, in_writter_idx, &apos;&apos;&apos;&apos;||auction_title||&apos;&apos;&apos; 경매를 취소하셨습니다.&apos;,&apos;낙찰중 인 경매를 취소하셨기 때문에 벌점 &apos;||karma_point||&apos;점을 받으셨습니다.&apos;,1);&lt;br/&gt;&lt;br/&gt;				insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;CANCEL_AUCTION&apos;, 1, &apos;Success. Auction canceled after due. [in_auction_idx: &apos;||in_auction_idx||&apos;, in_amount: &apos;||in_writter_idx||&apos;]&apos;);&lt;br/&gt;				select 1 into isDone from DUAL;&lt;br/&gt;&lt;br/&gt;			else&lt;br/&gt;				insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;CANCEL_AUCTION&apos;, -3, &apos;Cannot cancel auction with this stats. [in_auction_idx: &apos;||in_auction_idx||&apos;, in_amount: &apos;||in_writter_idx||&apos;, auction_state: &apos;||auction_state||&apos;]&apos;);&lt;br/&gt;				select -3 into isDone from DUAL;&lt;br/&gt;			end if;&lt;br/&gt;&lt;br/&gt;		end if;&lt;br/&gt;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;exception when others then&lt;br/&gt;&lt;br/&gt;	err_code := sqlcode;&lt;br/&gt;	err_message := substr(sqlerrm, 1, 255);&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT, err_code, err_message)&lt;br/&gt;		values (&apos;CANCEL_AUCTION&apos;, 0, &apos;ERROR!!! ........)&apos;, err_code, err_message );&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select 0 into isDone from DUAL;&lt;br/&gt;end;</source>
</StoredProcedureOraclev10g>