<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="TEMP_RCPT_MKR" directorySegmentName="seg_0" id="398D47E5-A8CB-8FAB-EA0D-206120283559">
<sourceConnName>cocoFarm</sourceConnName>
<sourceObjSchema>COCOFARM</sourceObjSchema>
<sourceObjName>TEMP_RCPT_MKR</sourceObjName>
<createdBy>Sonn</createdBy>
<createdTime>2018-06-17 09:48:31 UTC</createdTime>
<ownerDesignName>cocoDataModel</ownerDesignName>
<owner>9B2CBDD9-D4EA-AD8B-3936-1238B79FFDD3</owner>
<source>CREATE OR REPLACE procedure COCOFARM.TEMP_RCPT_MKR (in_acc_idx ACCOUNT.IDX%type, in_paid_name MAIN_RECEIPT.PAID_NAME%type, in_data nvarchar2&lt;br/&gt;								,out_m_rcpt_idx out MAIN_RECEIPT.IDX%type, isDone out number)&lt;br/&gt;is&lt;br/&gt;	t_option_idx		holder := holder();&lt;br/&gt;	t_option_amount		holder := holder();&lt;br/&gt;	t_bid_target		holder := holder();&lt;br/&gt;	t_bid_amount		holder := holder();&lt;br/&gt;	sale_holder			holder := holder();&lt;br/&gt;&lt;br/&gt;	i					number :=1;&lt;br/&gt;	checker				nvarchar2(2);&lt;br/&gt;	mainRecpt			number;&lt;br/&gt;	tot					number;&lt;br/&gt;	cnt					number;&lt;br/&gt;	done_code			number;&lt;br/&gt;&lt;br/&gt;	err_code			number;&lt;br/&gt;	err_message			varchar2(255);&lt;br/&gt;&lt;br/&gt;begin&lt;br/&gt;	savepoint START_TRANSACTION;&lt;br/&gt;&lt;br/&gt;	done_code := 0;&lt;br/&gt;&lt;br/&gt;	while i &lt; length(in_data) loop&lt;br/&gt;	-- 010110210010120220010140240&lt;br/&gt;		checker := substr(in_data,i,2);&lt;br/&gt;		i := i+2;&lt;br/&gt;&lt;br/&gt;		if(checker = &apos;01&apos;) then&lt;br/&gt;			t_option_idx.extend;&lt;br/&gt;			t_option_idx(t_option_idx.last) := to_number(substr(in_data, i+2, to_number( substr(in_data,i,2))));&lt;br/&gt;			i := i+2+to_number(substr(in_data,i,2));&lt;br/&gt;&lt;br/&gt;			t_option_amount.extend;&lt;br/&gt;			t_option_amount(t_option_amount.last) := to_number(substr(in_data, i+2, to_number( substr(in_data,i,2))));&lt;br/&gt;			i := i+2+to_number(substr(in_data,i,2));&lt;br/&gt;&lt;br/&gt;		elsif(checker = &apos;02&apos;) then&lt;br/&gt;			t_bid_target.extend;&lt;br/&gt;			t_bid_target(t_bid_target.last) := to_number(substr(in_data, i+2, to_number( substr(in_data,i,2))));&lt;br/&gt;			i := i+2+to_number(substr(in_data,i,2));&lt;br/&gt;&lt;br/&gt;			t_bid_amount.extend;&lt;br/&gt;			t_bid_amount(t_bid_amount.last) := to_number(substr(in_data, i+2, to_number( substr(in_data,i,2))));&lt;br/&gt;			i := i+2+to_number(substr(in_data,i,2));&lt;br/&gt;		else&lt;br/&gt;			i := 0;&lt;br/&gt;			exit;&lt;br/&gt;		end if;&lt;br/&gt;&lt;br/&gt;	end loop;&lt;br/&gt;&lt;br/&gt;	if (i=0) then&lt;br/&gt;		done_code := -1;&lt;br/&gt;		--직렬화 오류&lt;br/&gt;	elsif (i=3) then&lt;br/&gt;		done_code := -2;&lt;br/&gt;		--데이터 없음&lt;br/&gt;	elsif ( i &lt;&gt; length(in_data)+1 ) then&lt;br/&gt;		done_code := -3;&lt;br/&gt;		--직렬화 해석 오류 혹은 직렬화 오류&lt;br/&gt;	else&lt;br/&gt;		if (t_option_idx.last&gt;0 or t_bid_target.last&gt;0) then&lt;br/&gt;&lt;br/&gt;			if (t_option_idx.last&gt;0) then&lt;br/&gt;				select count(1) into cnt from SALE_OPTION where IDX in (select COLUMN_VALUE from table (t_option_idx)) and ISDEL =0;&lt;br/&gt;&lt;br/&gt;				if (cnt &lt;&gt; t_option_idx.last) then&lt;br/&gt;					done_code := -4;&lt;br/&gt;				else&lt;br/&gt;					tot := 0;&lt;br/&gt;					for j in 1..t_option_amount.last loop&lt;br/&gt;						dbms_output.put_line(&apos;1. j: &apos;||j);&lt;br/&gt;						select PRICE * t_option_amount(j) + tot into tot from SALE_OPTION where IDX = t_option_idx(j);&lt;br/&gt;					end loop;&lt;br/&gt;&lt;br/&gt;					sale_holder.extend(t_option_amount.last);&lt;br/&gt;					select distinct SALE_IDX bulk collect into sale_holder from SALE_OPTION where IDX in (select COLUMN_VALUE from table (t_option_idx));&lt;br/&gt;&lt;br/&gt;					mainRecpt := MAIN_RECPT_IDX_FUNC;&lt;br/&gt;					select mainRecpt into out_m_rcpt_idx from DUAL;&lt;br/&gt;					dbms_output.put_line(&apos;mainRecpt: &apos;||mainRecpt);&lt;br/&gt;					insert into MAIN_RECEIPT (IDX, BUYER_IDX, MONEY_AMOUNT, PAID_NAME) values (mainRecpt, in_acc_idx, tot, in_paid_name);&lt;br/&gt;&lt;br/&gt;					for j in 1..sale_holder.last loop&lt;br/&gt;						dbms_output.put_line(&apos;2. j: &apos;||j);&lt;br/&gt;						insert into SALE_RECEIPT (SALE_IDX, MAIN_RECPT_IDX) values (sale_holder(j), mainRecpt);&lt;br/&gt;					end loop;&lt;br/&gt;&lt;br/&gt;					for j in 1..t_option_idx.last loop&lt;br/&gt;						dbms_output.put_line(&apos;3. j: &apos;||j);&lt;br/&gt;						insert into SALE_OPTION_RECEIPT (MAIN_RECPT_IDX, SALE_OPTION_IDX, AMOUNT) values (mainRecpt, t_option_idx(j), t_option_amount(j));&lt;br/&gt;					end loop;&lt;br/&gt;				end if;&lt;br/&gt;&lt;br/&gt;			end if;&lt;br/&gt;&lt;br/&gt;			if (t_bid_target.last&gt;0) then&lt;br/&gt;				select count(1), sum(BID_AMOUNT) into cnt, tot from BID_CONTRACT_QUE where AUCTION_IDX in (select COLUMN_VALUE from table (t_bid_target));&lt;br/&gt;&lt;br/&gt;				if(cnt&lt;&gt;t_bid_target.last) then&lt;br/&gt;					done_code := -1;&lt;br/&gt;				else&lt;br/&gt;					if (mainRecpt is null) then&lt;br/&gt;						mainRecpt := MAIN_RECPT_IDX_FUNC;&lt;br/&gt;						select mainRecpt into out_m_rcpt_idx from DUAL;&lt;br/&gt;						dbms_output.put_line(&apos;mainRecpt: &apos;||mainRecpt);&lt;br/&gt;						insert into MAIN_RECEIPT (IDX, BUYER_IDX, MONEY_AMOUNT, PAID_NAME) values (mainRecpt, in_acc_idx, tot, in_paid_name);&lt;br/&gt;					else&lt;br/&gt;						update MAIN_RECEIPT set MONEY_AMOUNT = MONEY_AMOUNT + tot where IDX = mainRecpt;&lt;br/&gt;					end if;&lt;br/&gt;&lt;br/&gt;					for j in 1..t_bid_target.last loop&lt;br/&gt;						dbms_output.put_line(&apos;4. j: &apos;||j);&lt;br/&gt;						insert into BID_CONTRACT_RECEIPT (MAIN_RECPT_IDX, AUCTION_IDX, BID_AMOUNT) values (mainRecpt, t_bid_target(j), t_bid_amount(j));&lt;br/&gt;					end loop;&lt;br/&gt;				end if;&lt;br/&gt;&lt;br/&gt;			end if;&lt;br/&gt;&lt;br/&gt;			done_code := 1;&lt;br/&gt;		else&lt;br/&gt;			done_code := -5;&lt;br/&gt;		end if;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;	select done_code into isDone from DUAL;&lt;br/&gt;&lt;br/&gt;	if (done_code = 1) then&lt;br/&gt;		commit;&lt;br/&gt;	else&lt;br/&gt;		rollback to START_TRANSACTION;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;TEMP_RCPT_MKR&apos;, done_code, &apos;in_acc_idx: &apos;||in_acc_idx||&apos;, in_paid_name: &apos;||in_paid_name||&apos;, in_data: &apos;||in_data);&lt;br/&gt;&lt;br/&gt;exception when others then&lt;br/&gt;&lt;br/&gt;	err_code := sqlcode;&lt;br/&gt;	err_message := substr(sqlerrm, 1, 255);&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT, err_code, err_message)&lt;br/&gt;		values (&apos;TEMP_RCPT_MKR&apos;,0,&apos;ERROR!!. (in_acc_idx: &apos;||in_acc_idx||&apos;, in_paid_name: &apos;||in_paid_name||&apos;, in_data: &apos;||in_data||&apos;)&apos;,err_code, err_message);&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select 0 into isDone from DUAL;&lt;br/&gt;end;</source>
</StoredProcedureOraclev10g>