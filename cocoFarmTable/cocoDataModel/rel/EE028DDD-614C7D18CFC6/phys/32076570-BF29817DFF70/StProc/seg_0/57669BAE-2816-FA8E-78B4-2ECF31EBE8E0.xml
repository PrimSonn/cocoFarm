<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureOraclev10g class="oracle.dbtools.crest.model.design.storage.oracle.v10g.StoredProcedureOraclev10g" name="BID_DUE_CHECK" directorySegmentName="seg_0" id="57669BAE-2816-FA8E-78B4-2ECF31EBE8E0">
<sourceConnName>cocoFarm</sourceConnName>
<sourceObjSchema>COCOFARM</sourceObjSchema>
<sourceObjName>BID_DUE_CHECK</sourceObjName>
<createdBy>Sonn</createdBy>
<createdTime>2018-06-17 09:48:31 UTC</createdTime>
<ownerDesignName>cocoDataModel</ownerDesignName>
<owner>9B2CBDD9-D4EA-AD8B-3936-1238B79FFDD3</owner>
<source>CREATE OR REPLACE procedure COCOFARM.BID_DUE_CHECK (DBTIME out timestamp, NEXTCHECK out timestamp)&lt;br/&gt;is&lt;br/&gt;	next_bid_check		number;&lt;br/&gt;	was_lesser_bid		number;&lt;br/&gt;	no_lesser_bid		number;&lt;br/&gt;	next_bid_amount		number;&lt;br/&gt;	next_bid_bidder		number;&lt;br/&gt;	auct_writter		number;&lt;br/&gt;	timewindow			timestamp;&lt;br/&gt;	auct_title			AUCTION.TITLE%type;&lt;br/&gt;	karma_point			number;&lt;br/&gt;&lt;br/&gt;	err_code			number;&lt;br/&gt;	err_message			varchar2(255);&lt;br/&gt;&lt;br/&gt;	cursor BID_CUR is&lt;br/&gt;		select AUCTION_IDX, AMOUNT, BIDDER_IDX from BID where (AUCTION_IDX, AMOUNT) in (select AUCTION_IDX, BID_AMOUNT from BID_CONTRACT_QUE where PAYMENT_DUE &lt; SYSTIMESTAMP) for update;&lt;br/&gt;begin&lt;br/&gt;	was_lesser_bid := 0;&lt;br/&gt;	no_lesser_bid := 0;&lt;br/&gt;&lt;br/&gt;	select KARMA into karma_point from BAD_DEED_TYPE where CODE = 1;&lt;br/&gt;&lt;br/&gt;	for BID_ROW in BID_CUR loop&lt;br/&gt;&lt;br/&gt;		delete BID_CONTRACT_QUE where AUCTION_IDX = BID_ROW.AUCTION_IDX and BID_AMOUNT = BID_ROW.AMOUNT;&lt;br/&gt;		delete BID_ALIVE_QUE where AUCTION_IDX = BID_ROW.AUCTION_IDX and BID_AMOUNT = BID_ROW.AMOUNT;&lt;br/&gt;&lt;br/&gt;		select count(1) into next_bid_check from BID_ALIVE_QUE where AUCTION_IDX = BID_ROW.AUCTION_IDX;&lt;br/&gt;		select TITLE, WRITTER_IDX into auct_title, auct_writter from AUCTION where IDX = BID_ROW.AUCTION_IDX;&lt;br/&gt;&lt;br/&gt;		if (next_bid_check &gt;0) then&lt;br/&gt;			select B.BIGGEST_BID, Q.BIDDER_IDX into next_bid_amount, next_bid_bidder from BID_ALIVE_QUE Q&lt;br/&gt;				inner join (select max(BID_AMOUNT) BIGGEST_BID from BID_ALIVE_QUE where AUCTION_IDX = BID_ROW.AUCTION_IDX) B&lt;br/&gt;					on B.BIGGEST_BID = Q.BID_AMOUNT&lt;br/&gt;				where AUCTION_IDX = BID_ROW.AUCTION_IDX;&lt;br/&gt;			update BID set STATE_CODE = 3 where AUCTION_IDX = BID_ROW.AUCTION_IDX and AMOUNT = next_bid_amount;&lt;br/&gt;			update AUCTION set HIGHEST_BID = next_bid_amount, STATE_CODE = 6 where IDX = BID_ROW.AUCTION_IDX;&lt;br/&gt;			insert into BID_CONTRACT_QUE (AUCTION_IDX, BID_AMOUNT, CONTRACT_T_WIN_CODE) values (BID_ROW.AUCTION_IDX, next_bid_amount, 4);&lt;br/&gt;			select PAYMENT_DUE into timewindow from BID_CONTRACT_QUE where AUCTION_IDX = BID_ROW.AUCTION_IDX;&lt;br/&gt;			insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, next_bid_bidder, &apos;입찰하신 경매 &apos;&apos;&apos;||auct_title||&apos;&apos;&apos; 에 낙찰되셨습니다.&apos;,&apos;상위 입찰이 만료되어 해당 경매 &apos;&apos;&apos;||auct_title||&apos;&apos;&apos; 에 낙찰되셨습니다. &apos;||to_char(timewindow,&apos;YYYY-MM-DD HH24:MI:SS&apos;)||&apos; 까지 &apos;||next_bid_amount||&apos;원 을 지불하셔야 낙찰이 완료됩니다. 그렇지 않을 시, 낙찰 권한이 차등위 입찰로 넘어가고 계약 위반에 대해 제재를 받을 수 있음을 알려드립니다.&apos;,1);&lt;br/&gt;			insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, auct_writter, &apos;신청하신 경매 &apos;&apos;&apos;||auct_title||&apos;&apos;&apos; 의 대금 납부를 입찰인이 거부하였습니다.&apos;,&apos;해당 경매의 최고 입찰자가 낙찰 대금을 지불기한 내 지불을 하지 않아, 차등위 입찰로 낙찰 권한이 이양되었습니다. 차등위 입찰의 입찰금: &apos;||next_bid_amount||&apos;원&apos;, 1);&lt;br/&gt;			was_lesser_bid := was_lesser_bid +1;&lt;br/&gt;&lt;br/&gt;			insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BID_DUE_CHECK&apos;,1, &apos;successful. found NEXT_BID on AUCTION.IDX: &apos;||BID_ROW.AUCTION_IDX||&apos;, next_bid_amount: &apos;||next_bid_amount||&apos;, next_bid_bidder: &apos;||next_bid_bidder);&lt;br/&gt;&lt;br/&gt;		else&lt;br/&gt;			update AUCTION set STATE_CODE = 7, FINISHED_WHEN = SYSTIMESTAMP where IDX = BID_ROW.AUCTION_IDX;&lt;br/&gt;			insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE) values (0, auct_writter, &apos;신청하신 경매 &apos;&apos;&apos;||auct_title||&apos;&apos;&apos; 의 대금 납부를 모든 입찰인이 거부하였습니다.&apos;,&apos;해당 경매에 참여한 모든 유효 입찰의 입찰자 들이 낙찰 대금을 지불기한 내 지불을 하지 않아, 해당 경매가 거래 없이 완료되었습니다.&apos;, 1);&lt;br/&gt;			no_lesser_bid := no_lesser_bid +1;&lt;br/&gt;&lt;br/&gt;			insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BID_DUE_CHECK&apos;,1, &apos;successful. found no NEXT_BID on AUCTION.&apos;||BID_ROW.AUCTION_IDX);&lt;br/&gt;&lt;br/&gt;		end if;&lt;br/&gt;&lt;br/&gt;		insert into BAD_DEED_RECORD (CULPRIT_IDX, DEED_CODE) values ( BID_ROW.BIDDER_IDX, 1);&lt;br/&gt;		insert into MESSAGE (SENDER_IDX, RECEIVER_IDX, TITLE, CONTENT, TYPE_CODE)  values(0, BID_ROW.BIDDER_IDX, &apos;경매 &apos;&apos;&apos;||auct_title||&apos;&apos;&apos; 의 낙찰금 지불 기한이 만료되었습니다.&apos;,&apos;대상 경매에 대한 낙찰 권한을 상실하셨으며, 벌점 &apos;||karma_point|| &apos;점을 받으셨습니다.&apos;, 1);&lt;br/&gt;		update BID set STATE_CODE = 13, FINISHED_WHEN = SYSTIMESTAMP where current of BID_CUR;&lt;br/&gt;&lt;br/&gt;	end loop;&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT) values (&apos;BID_DUE_CHECK&apos;, 1, &apos;BID_DUE_CHECK done. (no_lesser_bid: &apos;||no_lesser_bid||&apos;, was_lesser_bid: &apos;||was_lesser_bid||&apos;)&apos;);&lt;br/&gt;&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select count(1) into next_bid_check from BID_CONTRACT_QUE;--시간&lt;br/&gt;	if (next_bid_check &gt;0 ) then&lt;br/&gt;		select SYSTIMESTAMP, least(PAYMENT_DUE, (select min(TIME_WINDOW) +SYSTIMESTAMP from CONTRACT_TIME_WINDOW_TYPE)) into DBTIME, NEXTCHECK from BID_CONTRACT_QUE group by SYSTIMESTAMP;&lt;br/&gt;	else&lt;br/&gt;		select SYSTIMESTAMP, SYSTIMESTAMP into DBTIME, NEXTCHECK from DUAL;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;exception when others then&lt;br/&gt;&lt;br/&gt;	err_code := sqlcode;&lt;br/&gt;	err_message := substr(sqlerrm, 1, 255);&lt;br/&gt;&lt;br/&gt;	insert into PLOGGER (NAME, RESULTCODE, CONTENT, err_code, err_message)&lt;br/&gt;		values (&apos;BID_DUE_CHECK&apos;,0,&apos;ERROR!!!. (no_lesser_bid: &apos;||no_lesser_bid||&apos;, was_lesser_bid: &apos;||was_lesser_bid||&apos;)&apos;,err_code, err_message);&lt;br/&gt;&lt;br/&gt;	commit;&lt;br/&gt;&lt;br/&gt;	select count(1) into next_bid_check from BID_CONTRACT_QUE;&lt;br/&gt;	if (next_bid_check &gt;0 ) then&lt;br/&gt;		select SYSTIMESTAMP, PAYMENT_DUE into DBTIME, NEXTCHECK from BID_CONTRACT_QUE;&lt;br/&gt;	else&lt;br/&gt;		select count(1) into next_bid_check from CONTRACT_TIME_WINDOW_TYPE;&lt;br/&gt;		if (next_bid_check &gt;0) then &lt;br/&gt;			select SYSTIMESTAMP, SYSTIMESTAMP + min(TIME_WINDOW) into DBTIME, NEXTCHECK from CONTRACT_TIME_WINDOW_TYPE group by SYSTIMESTAMP;&lt;br/&gt;		else&lt;br/&gt;			select SYSTIMESTAMP, SYSTIMESTAMP into DBTIME, NEXTCHECK from DUAL;&lt;br/&gt;		end if;&lt;br/&gt;&lt;br/&gt;	end if;&lt;br/&gt;&lt;br/&gt;end;</source>
</StoredProcedureOraclev10g>